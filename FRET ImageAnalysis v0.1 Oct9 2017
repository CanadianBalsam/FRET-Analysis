##################################################################################################################
## Mask Generation for obtaining mean instensities of Background and Signal for FRET math to be done
##
## Author: Dan Stevens
## Date: October 8, 2017
## Zen Version: 2.3 SP1
## Macro Version: 0.1
##
## Assumption is the following
## ch1 = donor excite, donor emission
## ch2 = acceptor excite, acceptor emission
## ch3 = donor excite, acceptor emission
##
###################################################################################################################


#temporary test block
workingImage = Zen.Application.Documents.ActiveDocument

#############
# Function  Definition for Mask Generation of BG
## INPUT    activeChannel
## OUTPUT   activeMask
#############
def bgMaskFunction(activeChannel_MF):
    segmentMask = Zen.Processing.Segmentation.ThresholdAutomatic(activeChannel_MF,ZenThresholdingMethod.ThreeSigmaThreshold,False,True,True,False)
    erodeMask = Zen.Processing.Binary.UltimateErode(segmentMask, ZenStructureElement.Square, 5, False, False)
    scrapMask = Zen.Processing.Binary.Scrap(erodeMask, 1000, 999999999, True,False)
    activeMask_MF = segmentMask
    Zen.Application.Documents.Add(activeMask_MF)
    return(activeMask_MF)

#############
## Function Definition for mean background determination
## INPUT    activeChannel 
##          activeMask
## OUTPUT   meanBG
#############
def meanBGFunction(activeChannel_MVF, activeMask_MVF):
    
    #initialize the analysis settings
    ZIAS = ZenImageAnalysisSetting(ZenAnalysisSettingType.ExternalMask)
    activeChannelName = str(activeChannel_MVF.Metadata.GetChannelName(0))
    activeMaskName = str(activeMask_MVF.Metadata.GetChannelName(0))

    #add measurement feature to the analysis routine
    ZIAS.AddRegionClassPair('allClass',1,activeMaskName,2,activeChannelName)
    ZIAS.GetRegionsClass('allClass').AddFeatureIntensity(ZenRegionsFeaturesIntensity.RegionsIntensityMean, activeChannelName)

    ## Analyze the signal mean intensity, generate result table, copy value of result to meanBG variable
    Zen.Analyzing.Analyze(activeChannel_MVF, activeMask_MVF, ZIAS)
    results = Zen.Analyzing.CreateRegionsTable(activeChannel_MVF)
    meanBG = float(results.GetValue(0,0))
    return(meanBG)

############
## Primary loop - Extract channel, generates BG and Signal Mask, returns BG and Signal mean intensity, loops to next channel
############

for i in range(0,3):
    channelNumber = 'C(' + str(i+1) + ')'
    activeChannel = Zen.Processing.Utilities.CreateSubset(workingImage, channelNumber, False)
    if i+1 == 1:
        activeMask = bgMaskFunction(activeChannel)                              #sends activeChannel to create background mask
        donorMeanBG = meanBGFunction(activeChannel, activeMask)                 #uses background mask on active channel to return background mean value
    if i+1 == 2:
        activeMask = bgMaskFunction(activeChannel)
        acceptorMeanBG = meanBGFunction(activeChannel, activeMask)
    if i+1 == 3:
        activeMask = bgMaskFunction(activeChannel)
        FRETMeanBG = meanBGFunction(activeChannel, activeMask)
        
        
        
